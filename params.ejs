<%- include('header', {currentMenu: 'params', pageTitle: 'Parameters'}); %>
<div class="row">
    <div class="col-lg-12 text-center">
        <div class="px-1 py-2 border border-light" style="display: inline-block">
            <span class="mr-2 px-2" id="site_name"></span>
            <span class="mr-2 px-2 " id="machine_name"></span>
            <span>Install Date: <span id="install_date"></span></span>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <button id="params_export_btn" class="btn btn-primary">Export</button>
        <button id="params_import_btn" class="btn btn-danger">Import</button>
        <input type="file"accept=".csv" class="form-control d-none" id="params_import_file">

        <div style="display: inline-block;">
            <img id="system_loading" style="display: none" src="resources/loading.gif" alt="Loading">
            <span id="file_name_container"></span>
            <span id="alert_message"></span>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-6">
        <h3 class="pb-0">Threshold Parameters</h3>
        <div style="display: block; overflow-y: auto; height: 238px">
            <table class="table table-sm table-bordered table-striped table-thres-time">
                <thead>
                <tr>
                    <th width="109px" style="text-align: center">Parameter ID</th>
                    <th>Description</th>
                    <th width="54px" style="text-align: right">Value</th>
                    <th width="72px">Unit</th>
                    <th width="228px"></th>
                </tr>
                </thead>
                <tbody id="table-parameters-threshold"></tbody>
            </table>
        </div>
        <h3>Timeout Parameters</h3>
        <div style="display: block; overflow-y: auto; height: 370px">
            <table class="table table-sm table-bordered table-striped table-thres-time table-v-scroll">
                <thead>
                <tr class="thead-row">
                    <th width="109px" style="text-align: center">Parameter ID</th>
                    <th>Description</th>
                    <th width="54px" style="text-align: right">Value</th>
                    <th width="72px">Unit</th>
                    <th width="228px"></th>
                </tr>
                </thead>
                <tbody id="table-parameters-timeout"></tbody>
            </table>
        </div>
    </div>
    <div class="col-lg-6">
        <h3 class="pb-0">Barcode</h3>
        <table class="table table-sm table-bordered table-striped">
            <thead>
            <tr>
                <th>Description</th>
                <th style="text-align: right">Value</th>
                <th>Unit</th>
                <th></th>
            </tr>
            </thead>
            <tbody id="table-barcode_param"></tbody>
        </table>
        <h4>Calibration</h4>
        <table class="table table-sm table-bordered table-striped" style="table-layout: fixed">
            <thead>
            <tr>
                <th></th>
                <th style="text-align: right" width="22%">Power Turn Entry Pe</th>
                <th style="text-align: right" width="22%">Reject Pe</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>Package 1</td>
                <td data-id="1" class="counter-class-value" style="text-align: right"></td>
                <td data-id="6" class="counter-class-value" style="text-align: right"></td>
            </tr>
            <tr>
                <td>Package 2</td>
                <td data-id="2" class="counter-class-value" style="text-align: right"></td>
                <td data-id="7" class="counter-class-value" style="text-align: right"></td>
            </tr>
            <tr>
                <td>Package 3</td>
                <td data-id="3" class="counter-class-value" style="text-align: right"></td>
                <td data-id="8" class="counter-class-value" style="text-align: right"></td>
            </tr>
            <tr>
                <td>Package 4</td>
                <td data-id="4" class="counter-class-value" style="text-align: right"></td>
                <td data-id="9" class="counter-class-value" style="text-align: right"></td>
            </tr>
            </tbody>
        </table>
        <table class="table table-sm table-bordered table-striped" style="table-layout: fixed">
            <thead>

            </thead>
            <tbody>
            <tr>
                <td>Power Turn Tracking Window</td>
                <td data-id="60" class='params-value' style="text-align: right" width="22%"></td>
                <td data-id="61" class='params-value' style="text-align: right" width="22%"></td>
            </tr>
            <tr>
                <td>Reject Position</td>
                <td data-id="62" class='params-value' style="text-align: right" width="22%"></td>
                <td>&nbsp;</td>
            </tr>
            </tbody>
        </table>
        <div style="text-align: end">
            <button id="calibration-button" class="button-device-command button-3d button-rectangle"
                    data-device-id="87"
                    data-command="0"
                    data-parameter1="0">Calibrate
            </button>
        </div>
        <div id="singulator-wrap" style="display: none">
        <h4>Singulator Parameters</h4>
        <div style="display: block; overflow-y: auto; height: 200px">
            <table class="table table-sm table-bordered table-striped table-thres-time table-v-scroll">
                <thead>
                <tr class="thead-row">
                    <th width="109px" style="text-align: center">Parameter ID</th>
                    <th>Description</th>
                    <th width="54px" style="text-align: right">Value</th>
                    <th width="72px">Unit</th>
                    <th width="228px"></th>
                </tr>
                </thead>
                <tbody id="table-parameters-singulator"></tbody>
            </table>
        </div>
        </div>
    </div>
</div>
</div>
<style>
    .table-thres-time {
        table-layout: fixed;
    }

    .table-v-scroll {
        position: relative;
    }

    .table-striped > thead > tr > th {
        background-color: #e2e8f0;
    }
</style>
<%- include('footer', {currentMenu: 'params'}); %>
<script src="js/jquery-bootstrap.js"></script>
<script src="js/jquery.newsTicker.js"></script>
<script src="js/daterangepicker/moment.min.js"></script>
<script src="js/nav.js"></script>

<script>
    let basic_info = {}, current_user = {};

    jQuery(document).ready(function () {
        jQuery("#ip_list_dropdown").change(function () {
            selected_machine = jQuery(this).val();
            if (selected_machine !== "") {
                let selected_machine_name = machine_list[selected_machine];
                jQuery("#display_machine_name").text(selected_machine_name);
            } else {
                jQuery("#display_machine_name").text("Select a machine");
                selected_machine = 0;
            }
            ipcRenderer.send("get:views", selected_machine, "params");
            // setInterval(()=>{
            //     ipcRenderer.send("get:views", selected_machine, "params");
            // }, 60000)
        });
        jQuery('#calibration-button').hide();
        $('.thead-row').children().css({position: 'sticky', top: 0});
    });
    ipcRenderer.on("render:params", function (e, data) {
        let parameters = [], table_html_threshold = '', table_html_timeout = '', current_user = null, machine_info,
            barcode_param = null, barcode_html = '', table_html_singulator = '';
        basic_info = data;
        machine_info = basic_info['machinesInfo'][selected_machine];
        current_user = basic_info['currentUser'];
        $('#site_name').text(machine_info['site_name']);
        $('#machine_name').text(machine_info['machine_name']);
        $('#install_date').text(moment(machine_info['install_at_timestamp'] * 1000).format('MMM D Y, H:mm:ss'))
        current_user = basic_info['currentUser'];
        if (current_user.role == 1) {
            $('#calibration-button').show();
            $('#singulator-wrap').show();
        }
        parameters = Object.values(basic_info['parametersInfo']);
        barcode_param = parameters.find(f => Number(f.param_id) === 50);
        if (barcode_param) {
            barcode_html =
                "<tr>" +
                "<td>" +
                barcode_param.description +
                "</td>" +
                "<td style=\"text-align: right\" data-id=" + barcode_param.param_id + " class='params-value'>" +
                barcode_param.value +
                "</td>" +
                "<td>" +
                barcode_param.unit +
                "</td>" +
                "<td>" +
                ((current_user.role == 1) ?
                        '<form class="d-flex form-params"> <input type="text" class="form-control" name="c_value"> ' +
                        '<input class="params-id" type="hidden" name="params_id" value=' + barcode_param.param_id + '>' +
                        '<button type="submit" class="btn btn-primary button_params" >Change</button> </form>' :
                        '<form class="d-flex form-params"> <input readonly type="text" class="form-control" name="c_value"> ' +
                        '<input class="params-id" type="hidden" name="params_id" value=' + barcode_param.param_id + '>' +
                        '<button disabled type="submit" class="btn btn-primary button_params" >Change</button> </form>'
                )
                +
                "</td></tr>";
            jQuery("#table-barcode_param").empty();
            jQuery("#table-barcode_param").append(barcode_html);
        }
        console.log(parameters)
        parameters.forEach(i => {
            if (i.param_id >= 1 && i.param_id <= 19) {
                table_html_threshold +=
                    "<tr>" +
                    "<td style='text-align: center'>" +
                    i.param_id +
                    "</td>" +
                    "<td>" +
                    i.description +
                    "</td>" +
                    "<td style='text-align: right' data-id=" + i.param_id + " class='params-value'>" +
                    i.value +
                    "</td>" +
                    "<td>" +
                    i.unit +
                    "</td>" +
                    "<td>" +
                    ((current_user.role == 1 || current_user.role == 2) ?
                            '<form class="d-flex form-params"> <input type="text" class="form-control" name="c_value"> ' +
                            '<input class="params-id" type="hidden" name="params_id" value=' + i.param_id + '>' +
                            '<button type="submit" class="btn btn-primary button_params" >Change</button> </form>' :
                            '<form class="d-flex form-params"> ' +
                            '<input class="params-id" type="hidden" name="params_id" value=' + i.param_id + '>' +
                            ' </form>'
                    )
                    +
                    "</td></tr>";
            }
            if (i.param_id >= 20 && i.param_id <= 49) {
                table_html_timeout +=
                    "<tr>" +
                    "<td style='text-align: center'>" +
                    i.param_id +
                    "</td>" +
                    "<td>" +
                    i.description +
                    "</td>" +
                    "<td style='text-align: right' data-id=" + i.param_id + " class='params-value'>" +
                    i.value +
                    "</td>" +
                    "<td>" +
                    i.unit +
                    "</td>" +
                    "<td>" +
                    ((current_user.role == 1 || current_user.role == 2) ?
                            '<form class="d-flex form-params"> <input type="text" class="form-control" name="c_value"> ' +
                            '<input class="params-id" type="hidden" name="params_id" value=' + i.param_id + '>' +
                            '<button type="submit" class="btn btn-primary button_params" >Change</button> </form>' :
                            '<form class="d-flex form-params"> ' +
                            '<input class="params-id" type="hidden" name="params_id" value=' + i.param_id + '>' +
                            ' </form>'
                    )
                    +
                    "</td></tr>";
            }
            if (i.param_id >= 100 && i.param_id <= 109) {
                table_html_singulator +=
                    "<tr>" +
                    "<td style='text-align: center'>" +
                    i.param_id +
                    "</td>" +
                    "<td>" +
                    i.description +
                    "</td>" +
                    "<td style='text-align: right' data-id=" + i.param_id + " class='params-value'>" +
                    i.value +
                    "</td>" +
                    "<td>" +
                    i.unit +
                    "</td>" +
                    "<td>" +
                    ((current_user.role == 1 || current_user.role == 2) ?
                            '<form class="d-flex form-params"> <input type="text" class="form-control" name="c_value"> ' +
                            '<input class="params-id" type="hidden" name="params_id" value=' + i.param_id + '>' +
                            '<button type="submit" class="btn btn-primary button_params" >Change</button> </form>' :
                            '<form class="d-flex form-params"> ' +
                            '<input class="params-id" type="hidden" name="params_id" value=' + i.param_id + '>' +
                            ' </form>'
                    )
                    +
                    "</td></tr>";
            }
        });
        jQuery("#table-parameters-threshold").empty();
        jQuery("#table-parameters-threshold").append(table_html_threshold);
        jQuery("#table-parameters-timeout").empty();
        jQuery("#table-parameters-timeout").append(table_html_timeout);
        jQuery("#table-parameters-singulator").empty();
        jQuery("#table-parameters-singulator").append(table_html_singulator);
        // jQuery('.form-params>.params-id').each(function (index, element) {
        //     $(element).val(Number(parameters[index]['id']));
        // });
        $('.form-params').submit(function (e) {
            e.preventDefault();
            let inputValues = $(this).serializeArray();
            let param_id = null, new_value = null;

            inputValues.forEach(inpValue => {
                if (inpValue.name == 'c_value') {
                    new_value = Number(inpValue.value);
                }
                if (inpValue.name == 'params_id') {
                    param_id = Number(inpValue.value);
                }
            });

            ipcRenderer.send("sendRequest", selected_machine, 'sendSetParamMessage', {
                'paramId': param_id,
                'value': new_value
            });
        });
        ipcRenderer.send("sendRequest", selected_machine, 'getMaintViewData', {});
        setInterval(() => {
            ipcRenderer.send("sendRequest", selected_machine, 'getMaintViewData', {});
        }, 1000);
    });
    ipcRenderer.on("getMaintViewData", function (e, data) {
        let paramValues = Object.values(data['parameterValues']), allRows = [],
            allCounterRows = [], counterValues = data['countersCurrentValue'];
        allRows = $('.params-value');
        allCounterRows = $('.counter-class-value');
        $(allRows).each((key, elem) => {
            let rowId = $(elem)[0].dataset.id, paramData = paramValues.find(d => d.param_id == rowId);
            if (paramData.param_id == 60 || paramData.param_id == 61) {
                $(elem).text(paramData.value + ' ms');
            } else if (paramData.param_id == 62) {
                $(elem).text(paramData.value + ' mm');
            } else {
                $(elem).text(paramData.value);
            }

        })

        $(allCounterRows).each((key, elem) => {
            let rowId = $(elem)[0].dataset.id, counterData = counterValues[selected_machine + '_' + Number(rowId)];
            $(elem).text(counterData);
        })


    });
    $(document).on('click','#params_export_btn',function (event){
        let requestData=[
            {'name':'parameters_value','params':{}},
        ];
        ipcRenderer.send("sendRequestToServer", "getParamsValue",{},requestData);
    })
    ipcRenderer.on("getParamsValue", function(e, jsonObject) {
        console.log(jsonObject['data']['parameters_value'])
        let machine_id=jsonObject['params']['machine_id'];
        let csvStr='';
        let parameters = Object.values(basic_info['parametersInfo']).sort((a, b) => a['param_id'] - b['param_id']);
        for(let key in parameters){
            let record=parameters[key];
            csvStr=csvStr+'"'+record['machine_id']+'";';
            csvStr=csvStr+'"'+record['param_id']+'";';
            csvStr=csvStr+'"'+record['description']+'";';
            csvStr=csvStr+'"'+jsonObject['data']['parameters_value'][record['machine_id']+'_'+record['param_id']]['value']+'";';
            csvStr=csvStr+'"'+record['unit']+'";';
            csvStr=csvStr+'"'+record['value_min']+'";';
            csvStr=csvStr+'"'+record['value_max']+'"\n';
        }
        let hiddenElement = document.createElement('a');
        hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csvStr);
        hiddenElement.target = '_blank';
        hiddenElement.download = 'parameters.csv';
        hiddenElement.click();
    })
    $(document).on('click','#params_import_btn',function (event){
        $('#params_import_file').val('');

        $('#system_loading').hide();
        $('#file_name_container').html('');
        $('#alert_message').html('');

        $('#params_import_file').trigger('click');

    })
    $("#params_import_file").on("change", function() {

        let fileName = $(this).val().split("\\").pop();
        if(fileName){
            $('#file_name_container').html("<span class='ml-1'> FileName: "+fileName+"</span>")
            $('#system_loading').show()
            $('#alert_message').html()
            let file=this.files[0];
            if(file.size>10000){
                $('#alert_message').html("<span class='text-danger'> Invalid FileSize: "+file.size+"</span>")
                $('#system_loading').hide()
            }
            else{
                let parameters = basic_info['parametersInfo'];
                const reader = new FileReader()
                reader.onload = function (e) {
                    const text = e.target.result;
                    let csvData=[];
                    let rows=text.split(/\r\n|\n/);
                    let errorStr='';
                    for(let key in rows)
                    {
                        let row=rows[key];
                        if(!row)continue;
                        let cols=row.split(";")
                        if(cols.length!=7){
                            errorStr="<span class='text-danger'>Invalid ColLength. line: "+key+" length: "+cols.length+"</span>"
                            break;
                        }
                        let machine_id=parseInt(cols[0].slice(1, -1));
                        let param_id=parseInt(cols[1].slice(1, -1));
                        let value=parseInt(cols[3].slice(1, -1));
                        if(parameters[machine_id+'_'+param_id]){
                            let parameter=parameters[machine_id+'_'+param_id];
                            if(value<parameter['value_min']){
                                errorStr="<span class='text-danger'>Value is lower than min value. line: "+key+" value_min: "+parameter['value_min']+" value: "+value+"</span>"
                                break;
                            }
                            if(value>parameter['value_max']){
                                errorStr="<span class='text-danger'>Value is higher than max value. line: "+key+" value_max: "+parameter['value_max']+" value: "+value+"</span>"
                                break;
                            }
                            csvData.push({'machine_id':machine_id,'param_id':param_id,'value':value})
                        }
                        else{
                            errorStr="<span class='text-danger'>Invalid Parameter. line: "+key+"</span>"
                            break;
                        }
                    }
                    if(errorStr){
                        $('#alert_message').html(errorStr);
                        $('#system_loading').hide()
                    }
                    else{
                        if(csvData.length<1){
                            $('#alert_message').html("<span class='text-danger'>Data Not Found</span>")
                            $('#system_loading').hide()
                        }
                        else{
                            let requestData=[
                                {'name':'import_parameters_value','params':{'csvData':csvData}},
                            ];
                            ipcRenderer.send("sendRequestToServer", "ImportParametersValue",{},requestData);
                        }
                    }


                    //console.log(text)
                };
                reader.readAsText(file)
                //reader.readAsBinaryString(file)
            }

        }
    });
    ipcRenderer.on("ImportParametersValue", function(e, jsonObject) {
        let totalRowChanged=jsonObject['data']['import_parameters_value']['totalRowChanged'];
        if(totalRowChanged>-1){
            if(totalRowChanged>0){
                $('#alert_message').html("<span class='text-success'>"+totalRowChanged+" Parameters value updated.</span>")
            }
            else{
                $('#alert_message').html("<span class='text-success'>No Change value found.</span>")
            }

        }
        else{
            $('#alert_message').html("<span class='text-danger'>Params Upload Failed</span>")
        }

        $('#system_loading').hide()
    })
</script>
